services:
  db:
    image: postgres:16-alpine
    container_name: cookbook_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: cookbook
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 2s
      timeout: 2s
      retries: 30
      start_period: 2s

  redis:
    image: redis:7-alpine
    container_name: cookbook_redis
    restart: unless-stopped
    ports:
      - "6379:6379"

  backend:
    build:
      context: ./
      dockerfile: backend/Dockerfile
    container_name: cookbook_backend
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env
    ports:
      - "8000:8000"

  worker:
    build:
      context: ./
      dockerfile: backend/Dockerfile
    container_name: cookbook_worker
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env
    command: ["python", "-m", "backend.workers.mq_worker"]
    restart: unless-stopped

  frontend:
    build:
      context: ./
      dockerfile: frontend/Dockerfile
    container_name: cookbook_frontend
    ports:
      - "5173:80"
    depends_on:
      - backend

volumes:
  db_data:

